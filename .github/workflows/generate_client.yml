name: Generate Client

on:
    workflow_dispatch:
    repository_dispatch:
        types: [ generate-client ]

jobs:
    generate-client:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4
                with:
                    token: ${{ secrets.RELEASE_GIT_TOKEN }}
            -   name: "Install Poetry"
                run: "pipx install poetry"
            -   name: Install OpenAPI Python Generator
                run: "pipx install openapi-python-client --include-deps"
            -   name: Set up Python ${{matrix.python-version}}
                uses: "actions/setup-python@v5"
                with:
                    python-version: 3.11
                    cache: poetry
            -   name: Install jq
                run: |
                    sudo apt-get update
                    sudo apt-get install -y jq
            -   name: Download OpenAPI schema and update pyproject.toml
                run: |
                    curl -LJO https://raw.githubusercontent.com/Qwizi/cs2-battle-bot-api/feature/src/openapi.json
                    VERSION=$(jq -r .info.version openapi.json)
                    sed -i "s/version = \".*\"/version = \"$VERSION\"/" pyproject.toml
                    echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
                    echo "Updated version to $VERSION"
            -   name: Generate Python client
                run: |
                    cd ..
                    openapi-python-client update --path cs2-battle-bot-api-client/openapi.json
                    rm cs2-battle-bot-api-client/openapi.json
            -   name: Commit and push changes
                run: |
                    git config --global user.email "github@actions.com"
                    git config --global user.name "GitHub Actions"
                    git add .
                    if [[ -n "$(git diff --cached)" ]]; then
                        git commit -m "Update client to version ${{ env.RELEASE_VERSION }}"
                        git push
                    else
                        echo "No changes to commit"
                    fi
            -   name: Release New Version
                uses: softprops/action-gh-release@v1
                with:
                    name: v${{ env.RELEASE_VERSION }}
                    tag_name: v${{ env.RELEASE_VERSION }}
                    token: ${{ secrets.RELEASE_GIT_TOKEN }}
            -   name: Discord notification
                env:
                    DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
                uses: Ilshidur/action-discord@master
                with:
                    args: '{{ EVENT_PAYLOAD.repository.full_name }} successfully generated and created release a new version ${{ env.RELEASE_VERSION }}. Check it out -> {{ EVENT_PAYLOAD.release.html_url }}'